name: Build and Push Docker Images

on:
  workflow_call:

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}

    - name: Extract metadata (tags, labels) for base image
      id: meta-base
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-base
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Extract metadata (tags, labels) for web image
      id: meta-web
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-web
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Build and push web image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./apps/web/Dockerfile
        target: production
        push: true
        tags: ${{ steps.meta-web.outputs.tags }}
        labels: ${{ steps.meta-web.outputs.labels }}

    - name: Trigger Coolify deployment
      if: github.ref == 'refs/heads/main'
      run: |
        curl -X GET "${{ secrets.COOLIFY_API_URL }}/deploy?uuid=${{ secrets.COOLIFY_RESOURCE_UUID }}" \
          -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
          -H "Content-Type: application/json"